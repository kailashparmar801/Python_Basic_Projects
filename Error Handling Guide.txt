1)What type of error occurs when you try to divide by zero in Python?

Indentation Error

Syntax Error

Logical Error

Runtime Error

Answer:- Runtime Error

*******************************************************

2)Which of the following represents a Syntax Error?

print(5 / 0)

y = int("hello")

if x == 5 print("x is five")

average = sum(numbers) / len(numbers) + 1

Answer:- if x == 5 print("x is five")

*******************************************************

3)What will be output of given python code?

   if True print("Hello")

Logical Error

Empty String

Syntax Error

Print "Hello"

Answer:- Print "Hello"

*******************************************************

4)What type of error might this code produce result = (10 + 5) / 3 + 1 if result is expected to be 5?

Logical Error

Syntax Error

Runtime Error

TypeError

Answer:- Logical Error

*******************************************************

5)Which among the following will raise Syntax Error?


for i in range(10): print(i)

print("Result":)

print(10/0)

x = 5

Answer:- print("Result":)

*******************************************************

6)What type of error occurs when trying to read a file that does not exist?

Runtime Error

Logical Error

Syntax Error

Indentation Error

Answer:- Runtime Error

*******************************************************

7)You wrote a program that asks users for a number, but the user enters a string instead. How can you handle potential errors?

Use an if statement to check if it's a number

None of the above

Use a try/except block to catch ValueError

Just let the program crash

Answer:- Use a try/except block to catch ValueError

*******************************************************

8)During arithmetic operations, if you accidentally multiply a float with a string, which error will occur? How can you prevent this?

IndentationError; adjust spacing

NameError; check variable names

TypeError; use try/except to catch it

SyntaxError; change the code format

Answer:- TypeError; use try/except to catch it

*******************************************************

9)What will be output of following code?

def add_numbers(x, y):
return x + y
print(add_numbers("5", 7))

57

TypeError

12

"5" + 7

Answer:- TypeError

*******************************************************

10)What is the purpose of an else block in a try-except structure?


It has no purpose and is optional

To provide cleanup actions

To handle all types of exceptions

To execute code only if no exceptions occur

Answer:- To execute code only if no exceptions occur

*******************************************************

11)What does the finally block guarantee in Python?


It guarantees that the code runs before exceptions are raised

It executes only when no exceptions are raised

It guarantees that the code runs regardless of whether an exception occurred or not.

It runs only if the try block has no errors

Answer:- It guarantees that the code runs regardless of whether an exception occurred or not.

*******************************************************

12)Which of the following is not a built-in exception in Python?


AttributeError

ValueError

OutOfMemoryError

ImportError

Answer:- OutOfMemoryError

*******************************************************

13)When handling exceptions, what happens if an exception occurs inside an except block but there is no subsequent try block to catch it?


The program continues executing the next line after the except block

The program handles the second exception automatically

The program terminates and prints the traceback

It raises a warning but does not stop execution

Answer:- The program terminates and prints the traceback

*******************************************************

14)Which of the following statements correctly describes how to handle an IndentationError?


Correct the indentation in the code before running it

Wrap the code in a try-except block to catch it

Indentation errors can be ignored without consequences

Use a default value when the error occurs

Answer:- Correct the indentation in the code before running it

*******************************************************

15)Which of the following statements about finally blocks is false?


The finally block will execute even if a return statement is encountered in the try block

A finally block can be skipped if there is an unhandled exception

You cannot have a finally block without a corresponding try block

A finally block executes regardless of whether an exception is raised

Answer:- A finally block can be skipped if there is an unhandled exception

*******************************************************

16)Select the correct output of this code

while True:
try:
num = int(input("Enter a positive number (or -1 to quit): "))
if num == -1:
print("Exiting...")
break
elif num < 0:
raise ValueError("The number must be positive!")
except ValueError as e:
print(e)

It will print an error message if a negative number (other than -1) is entered, and continue asking for input until -1 is entered

It will terminate immediately if a negative number is entered

It will give a syntax error

It will print nothing and exit the program

Answer:- It will print an error message if a negative number (other than -1) is entered, and continue asking for input until -1 is entered

*******************************************************

17)What will be the output of the following code snippet if the user inputs is -5.

while True:
try:
number = int(input("Enter a positive number: "))
if number <= 0:
raise ValueError("Only positive numbers are allowed.")
print(f"You entered: {number}")
break
except ValueError as e:
print(e)

Only positive numbers are allowed. You entered: 3

You entered: 5

Execution will stop without any output

Only positive numbers are allowed

Answer:- Only positive numbers are allowed